/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/layout"],{

/***/ "(app-pages-browser)/./node_modules/cosmic-analytics/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/cosmic-analytics/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CosmicAnalytics: () => (/* binding */ CosmicAnalytics),\n/* harmony export */   CosmicAnalyticsProvider: () => (/* binding */ CosmicAnalyticsProvider),\n/* harmony export */   getAnalytics: () => (/* binding */ getAnalytics),\n/* harmony export */   getReferrerSource: () => (/* binding */ getReferrerSource),\n/* harmony export */   initAnalytics: () => (/* binding */ initAnalytics),\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   parseUserAgent: () => (/* binding */ parseUserAgent),\n/* harmony export */   useCosmicAnalytics: () => (/* binding */ useCosmicAnalytics)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n/* __next_internal_client_entry_do_not_use__ CosmicAnalytics,CosmicAnalyticsProvider,getAnalytics,getReferrerSource,initAnalytics,isBrowser,parseUserAgent,useCosmicAnalytics auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$();\n// src/client/useCosmicAnalytics.ts\n\n\n// src/lib/utils.ts\nfunction generateSessionId() {\n    return \"\".concat(Date.now(), \"-\").concat(Math.random().toString(36).substring(2, 15));\n}\nfunction isBrowser() {\n    return typeof window !== \"undefined\" && typeof document !== \"undefined\";\n}\nfunction isDoNotTrackEnabled() {\n    if (!isBrowser()) return false;\n    const { doNotTrack, navigator: navigator2 } = window;\n    const dnt = doNotTrack || navigator2.doNotTrack || navigator2.msDoNotTrack;\n    return dnt === \"1\" || dnt === \"yes\";\n}\nfunction parseUserAgent(userAgent) {\n    const ua = userAgent.toLowerCase();\n    let type = \"desktop\";\n    if (/tablet|ipad|playbook|silk/i.test(ua)) {\n        type = \"tablet\";\n    } else if (/mobile|iphone|ipod|android|blackberry|opera|mini|windows\\sce|palm|smartphone|iemobile/i.test(ua)) {\n        type = \"mobile\";\n    }\n    let os = \"Unknown\";\n    if (/windows nt 10/i.test(ua)) os = \"Windows 10\";\n    else if (/windows nt 6.3/i.test(ua)) os = \"Windows 8.1\";\n    else if (/windows nt 6.2/i.test(ua)) os = \"Windows 8\";\n    else if (/windows nt 6.1/i.test(ua)) os = \"Windows 7\";\n    else if (/windows/i.test(ua)) os = \"Windows\";\n    else if (/android/i.test(ua)) os = \"Android\";\n    else if (/iphone|ipad|ipod/i.test(ua)) os = \"iOS\";\n    else if (/mac os x/i.test(ua)) os = \"macOS\";\n    else if (/linux/i.test(ua)) os = \"Linux\";\n    else if (/chromeos/i.test(ua)) os = \"Chrome OS\";\n    let browser = \"Unknown\";\n    let browserVersion = \"\";\n    if (/edg\\//i.test(ua)) {\n        browser = \"Edge\";\n        const match = ua.match(/edg\\/(\\d+(\\.\\d+)*)/);\n        if (match) browserVersion = match[1];\n    } else if (/chrome|crios/i.test(ua) && !/edg/i.test(ua)) {\n        browser = \"Chrome\";\n        const match = ua.match(/chrome\\/(\\d+(\\.\\d+)*)/);\n        if (match) browserVersion = match[1];\n    } else if (/firefox|fxios/i.test(ua)) {\n        browser = \"Firefox\";\n        const match = ua.match(/firefox\\/(\\d+(\\.\\d+)*)/);\n        if (match) browserVersion = match[1];\n    } else if (/safari/i.test(ua) && !/chrome|crios/i.test(ua)) {\n        browser = \"Safari\";\n        const match = ua.match(/version\\/(\\d+(\\.\\d+)*)/);\n        if (match) browserVersion = match[1];\n    } else if (/opera|opr/i.test(ua)) {\n        browser = \"Opera\";\n        const match = ua.match(/(?:opera|opr)\\/(\\d+(\\.\\d+)*)/);\n        if (match) browserVersion = match[1];\n    }\n    return {\n        type,\n        os,\n        browser,\n        browserVersion\n    };\n}\nfunction getViewport() {\n    if (!isBrowser()) return \"\";\n    return \"\".concat(window.innerWidth, \"x\").concat(window.innerHeight);\n}\nfunction getScreenResolution() {\n    if (!isBrowser()) return \"\";\n    return \"\".concat(window.screen.width, \"x\").concat(window.screen.height);\n}\nfunction getReferrerSource(referrer) {\n    if (!referrer || referrer === \"\") return \"direct\";\n    try {\n        const url = new URL(referrer);\n        const hostname = url.hostname.replace(\"www.\", \"\");\n        if (hostname.includes(\"facebook.com\") || hostname.includes(\"fb.com\")) return \"facebook\";\n        if (hostname.includes(\"twitter.com\") || hostname.includes(\"t.co\")) return \"twitter\";\n        if (hostname.includes(\"linkedin.com\")) return \"linkedin\";\n        if (hostname.includes(\"instagram.com\")) return \"instagram\";\n        if (hostname.includes(\"youtube.com\")) return \"youtube\";\n        if (hostname.includes(\"reddit.com\")) return \"reddit\";\n        if (hostname.includes(\"google.\")) return \"google\";\n        if (hostname.includes(\"bing.com\")) return \"bing\";\n        if (hostname.includes(\"yahoo.\")) return \"yahoo\";\n        if (hostname.includes(\"duckduckgo.com\")) return \"duckduckgo\";\n        if (hostname.includes(\"baidu.com\")) return \"baidu\";\n        return hostname;\n    } catch (e) {\n        return \"invalid\";\n    }\n}\nfunction safeJsonParse(json, fallback) {\n    try {\n        return JSON.parse(json);\n    } catch (e) {\n        return fallback;\n    }\n}\n// src/lib/analytics.ts\nvar SESSION_TIMEOUT = 30 * 60 * 1e3;\nvar SESSION_STORAGE_KEY = \"cosmic_analytics_session\";\nvar CosmicAnalytics = class {\n    getProjectId() {\n        return \"\";\n    }\n    isDevelopmentMode() {\n        if (typeof this.config.isDevelopment === \"boolean\") {\n            return this.config.isDevelopment;\n        }\n        if (typeof globalThis.process !== \"undefined\") {\n            var _globalThis_process_env;\n            return ((_globalThis_process_env = globalThis.process.env) === null || _globalThis_process_env === void 0 ? void 0 : _globalThis_process_env.NODE_ENV) === \"development\";\n        }\n        if (isBrowser()) {\n            var _window___NEXT_DATA__;\n            if (((_window___NEXT_DATA__ = window.__NEXT_DATA__) === null || _window___NEXT_DATA__ === void 0 ? void 0 : _window___NEXT_DATA__.buildId) === \"development\") {\n                return true;\n            }\n            const hostname = window.location.hostname;\n            return hostname === \"localhost\" || hostname === \"127.0.0.1\" || hostname.includes(\".local\");\n        }\n        return false;\n    }\n    shouldEnableAnalytics() {\n        if (!this.config.enabled) return false;\n        if (!this.projectId) {\n            if (this.config.debug) {\n                console.warn(\"Cosmic Analytics: NEXT_PUBLIC_CLIENT_ID not found\");\n            }\n            return false;\n        }\n        if (this.isDevelopmentMode() && !this.config.sendInDevelopment) {\n            if (this.config.debug) {\n                console.log(\"Cosmic Analytics: Disabled in development mode. Set sendInDevelopment: true to enable.\");\n            }\n            return false;\n        }\n        if (this.config.respectDoNotTrack && isDoNotTrackEnabled()) {\n            if (this.config.debug) {\n                console.log(\"Cosmic Analytics: Respecting Do Not Track preference\");\n            }\n            return false;\n        }\n        return true;\n    }\n    initializeSession() {\n        const storedSession = this.getStoredSession();\n        if (storedSession && this.isSessionValid(storedSession)) {\n            this.session = storedSession;\n            this.session.lastActivity = Date.now();\n        } else {\n            this.session = {\n                id: generateSessionId(),\n                startTime: Date.now(),\n                pageViews: 0,\n                lastActivity: Date.now()\n            };\n        }\n        this.saveSession();\n    }\n    getStoredSession() {\n        if (!isBrowser()) return null;\n        try {\n            const stored = sessionStorage.getItem(SESSION_STORAGE_KEY);\n            if (!stored) return null;\n            return safeJsonParse(stored, null);\n        } catch (e) {\n            return null;\n        }\n    }\n    isSessionValid(session) {\n        const now = Date.now();\n        return now - session.lastActivity < SESSION_TIMEOUT;\n    }\n    saveSession() {\n        if (!isBrowser() || !this.session) return;\n        try {\n            sessionStorage.setItem(SESSION_STORAGE_KEY, JSON.stringify(this.session));\n        } catch (error) {\n            if (this.config.debug) {\n                console.error(\"Cosmic Analytics: Failed to save session\", error);\n            }\n        }\n    }\n    setupEventListeners() {\n        if (!isBrowser()) return;\n        document.addEventListener(\"visibilitychange\", ()=>{\n            if (document.visibilityState === \"hidden\") {\n                this.trackPageExit();\n                this.flush(true);\n            } else if (document.visibilityState === \"visible\") {\n                this.trackPageView();\n            }\n        });\n        window.addEventListener(\"beforeunload\", ()=>{\n            this.trackPageExit();\n            this.flush(true);\n        });\n    }\n    startFlushTimer() {\n        this.flushTimer = setInterval(()=>{\n            this.flush();\n        }, 5e3);\n    }\n    stopFlushTimer() {\n        if (this.flushTimer) {\n            clearInterval(this.flushTimer);\n            this.flushTimer = null;\n        }\n    }\n    addToQueue(event) {\n        this.queue.push(event);\n        if (this.queue.length >= 10) {\n            this.flush();\n        }\n    }\n    async flush() {\n        let forceSendNow = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n        if (this.queue.length === 0) return;\n        const events = [\n            ...this.queue\n        ];\n        this.queue = [];\n        try {\n            const response = await fetch(\"\".concat(this.apiEndpoint, \"/track\"), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    events\n                }),\n                keepalive: forceSendNow\n            });\n            if (!response.ok && this.config.debug) {\n                console.error(\"Cosmic Analytics: Failed to send events\", response.status);\n                this.queue.unshift(...events);\n            }\n        } catch (error) {\n            if (this.config.debug) {\n                console.error(\"Cosmic Analytics: Error sending events\", error);\n            }\n            this.queue.unshift(...events);\n        }\n    }\n    trackPageView(overrides) {\n        if (!this.isEnabled || !isBrowser() || !this.session) return;\n        this.pageViewStart = Date.now();\n        this.session.pageViews++;\n        this.session.lastActivity = Date.now();\n        this.saveSession();\n        const event = {\n            event: \"pageview\",\n            projectId: this.projectId,\n            sessionId: this.session.id,\n            url: window.location.href,\n            title: document.title,\n            referrer: document.referrer || \"direct\",\n            timestamp: Date.now(),\n            screenResolution: getScreenResolution(),\n            viewport: getViewport(),\n            language: navigator.language,\n            userAgent: navigator.userAgent,\n            ...overrides\n        };\n        if (this.config.debug) {\n            console.log(\"Cosmic Analytics: Page view\", event);\n        }\n        this.addToQueue(event);\n    }\n    trackPageExit() {\n        if (!this.isEnabled || !isBrowser() || !this.session || !this.pageViewStart) return;\n        const duration = Date.now() - this.pageViewStart;\n        const event = {\n            event: \"pageexit\",\n            projectId: this.projectId,\n            sessionId: this.session.id,\n            url: window.location.href,\n            duration,\n            timestamp: Date.now()\n        };\n        if (this.config.debug) {\n            console.log(\"Cosmic Analytics: Page exit\", event);\n        }\n        this.addToQueue(event);\n    }\n    reset() {\n        if (!isBrowser()) return;\n        this.session = null;\n        sessionStorage.removeItem(SESSION_STORAGE_KEY);\n        if (this.isEnabled) {\n            this.initializeSession();\n        }\n    }\n    disable() {\n        this.isEnabled = false;\n        this.stopFlushTimer();\n        this.queue = [];\n    }\n    enable() {\n        this.isEnabled = this.shouldEnableAnalytics();\n        if (this.isEnabled && isBrowser()) {\n            this.initializeSession();\n            this.startFlushTimer();\n        }\n    }\n    constructor(config){\n        this.session = null;\n        this.pageViewStart = 0;\n        this.isEnabled = true;\n        this.queue = [];\n        this.flushTimer = null;\n        this.config = {\n            apiEndpoint: \"https://api.cosmic.new/analytics\",\n            debug: false,\n            enabled: true,\n            respectDoNotTrack: true,\n            sendInDevelopment: false,\n            ...config\n        };\n        this.projectId = this.config.projectId || this.getProjectId();\n        this.apiEndpoint = this.config.apiEndpoint;\n        this.isEnabled = this.shouldEnableAnalytics();\n        if (this.isEnabled && isBrowser()) {\n            this.initializeSession();\n            this.setupEventListeners();\n            this.startFlushTimer();\n        }\n    }\n};\n// src/client/useCosmicAnalytics.ts\nvar analyticsInstance = null;\nfunction initAnalytics(config) {\n    if (!analyticsInstance) {\n        analyticsInstance = new CosmicAnalytics(config);\n    }\n    return analyticsInstance;\n}\nfunction getAnalytics() {\n    return analyticsInstance;\n}\nfunction useCosmicAnalytics(config) {\n    _s();\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_1__.usePathname)();\n    const initializedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const prevUrlRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useCosmicAnalytics.useEffect\": ()=>{\n            if (!initializedRef.current) {\n                initAnalytics(config);\n                initializedRef.current = true;\n            }\n            const analytics = getAnalytics();\n            if (!analytics) return;\n            const currentUrl = typeof window !== \"undefined\" ? window.location.href : pathname;\n            if (prevUrlRef.current !== currentUrl) {\n                analytics.trackPageView();\n                prevUrlRef.current = currentUrl;\n            }\n            return ({\n                \"useCosmicAnalytics.useEffect\": ()=>{\n                    analytics.trackPageExit();\n                }\n            })[\"useCosmicAnalytics.useEffect\"];\n        }\n    }[\"useCosmicAnalytics.useEffect\"], [\n        pathname,\n        config\n    ]);\n}\n_s(useCosmicAnalytics, \"XnbwBnNEO8J+iZSzHaQHTLZ6Egk=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_1__.usePathname\n    ];\n});\n// src/client/CosmicAnalyticsProvider.tsx\n\nfunction CosmicAnalyticsProvider(param) {\n    let { children, config } = param;\n    _s1();\n    const projectId = process.env.NEXT_PUBLIC_CLIENT_ID;\n    const isDevelopment = \"development\" === \"development\";\n    const mergedConfig = {\n        projectId,\n        isDevelopment,\n        ...config\n    };\n    useCosmicAnalytics(mergedConfig);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n        children\n    });\n}\n_s1(CosmicAnalyticsProvider, \"OUbX73BXYWQwiDX8iF7gzPg4WsE=\", false, function() {\n    return [\n        useCosmicAnalytics\n    ];\n});\n_c = CosmicAnalyticsProvider;\n //# sourceMappingURL=index.mjs.map\nvar _c;\n$RefreshReg$(_c, \"CosmicAnalyticsProvider\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/cosmic-analytics/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/cosmic-authentication/dist/context/auth-context.js":
/*!*************************************************************************!*\
  !*** ./node_modules/cosmic-authentication/dist/context/auth-context.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n/* __next_internal_client_entry_do_not_use__  cjs */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AuthProvider = AuthProvider;\nexports.useAuth = useAuth;\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst react_1 = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nconst AuthContext = (0, react_1.createContext)(undefined);\n// Helper function to detect if running inside an iframe\nconst isInsideIframe = ()=>{\n    try {\n        return window.self !== window.top;\n    } catch (e) {\n        // If we can't access window.top due to cross-origin restrictions, we're likely in an iframe\n        return true;\n    }\n};\n// Simple notification component for iframe detection\nconst IframeNotification = (param)=>{\n    let { onClose } = param;\n    return (0, jsx_runtime_1.jsx)(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[9999]\",\n        children: (0, jsx_runtime_1.jsxs)(\"div\", {\n            className: \"bg-white rounded-lg p-6 m-4 max-w-md shadow-xl\",\n            children: [\n                (0, jsx_runtime_1.jsxs)(\"div\", {\n                    className: \"flex items-center mb-4\",\n                    children: [\n                        (0, jsx_runtime_1.jsx)(\"div\", {\n                            className: \"flex-shrink-0\",\n                            children: (0, jsx_runtime_1.jsx)(\"svg\", {\n                                className: \"h-6 w-6 text-amber-400\",\n                                fill: \"none\",\n                                viewBox: \"0 0 24 24\",\n                                stroke: \"currentColor\",\n                                children: (0, jsx_runtime_1.jsx)(\"path\", {\n                                    strokeLinecap: \"round\",\n                                    strokeLinejoin: \"round\",\n                                    strokeWidth: 2,\n                                    d: \"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.464 0L4.35 16.5c-.77.833.192 2.5 1.732 2.5z\"\n                                })\n                            })\n                        }),\n                        (0, jsx_runtime_1.jsx)(\"h3\", {\n                            className: \"ml-3 text-lg font-medium text-gray-900\",\n                            children: \"Authentication Required\"\n                        })\n                    ]\n                }),\n                (0, jsx_runtime_1.jsxs)(\"div\", {\n                    className: \"text-gray-700 mb-6\",\n                    children: [\n                        (0, jsx_runtime_1.jsx)(\"p\", {\n                            className: \"mb-3\",\n                            children: \"To test Cosmic authentication, please open this preview in a new tab.\"\n                        }),\n                        (0, jsx_runtime_1.jsx)(\"p\", {\n                            className: \"text-sm text-gray-600\",\n                            children: \"Cosmic auth cannot be displayed within an iframe due to security policies.\"\n                        })\n                    ]\n                }),\n                (0, jsx_runtime_1.jsxs)(\"div\", {\n                    className: \"flex justify-end space-x-3\",\n                    children: [\n                        (0, jsx_runtime_1.jsx)(\"button\", {\n                            onClick: onClose,\n                            className: \"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-200 border border-gray-300 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\",\n                            children: \"Close\"\n                        }),\n                        (0, jsx_runtime_1.jsx)(\"button\", {\n                            onClick: ()=>{\n                                window.open(window.location.href, '_blank');\n                                onClose();\n                            },\n                            className: \"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n                            children: \"Open in New Tab\"\n                        })\n                    ]\n                })\n            ]\n        })\n    });\n};\n_c = IframeNotification;\nfunction AuthProvider(param) {\n    let { children } = param;\n    const [authState, setAuthState] = (0, react_1.useState)({\n        isAuthenticated: false,\n        user: null\n    });\n    const [loading, setLoading] = (0, react_1.useState)(true);\n    const [showIframeNotification, setShowIframeNotification] = (0, react_1.useState)(false);\n    const checkAuthStatus = (0, react_1.useCallback)(async ()=>{\n        setLoading(true);\n        try {\n            const response = await fetch(\"\".concat(process.env.NEXT_PUBLIC_BASE_URL, \"/api/auth/status\"), {\n                cache: 'no-store',\n                credentials: 'same-origin'\n            });\n            if (!response.ok) {\n                setAuthState({\n                    isAuthenticated: false,\n                    user: null\n                });\n                return {\n                    isAuthenticated: false,\n                    user: null\n                };\n            }\n            const { authenticated, user } = await response.json();\n            const newState = {\n                isAuthenticated: authenticated,\n                user\n            };\n            setAuthState(newState);\n            // Clear the return URL cookie after successful authentication check\n            // This prevents stale redirect cookies from affecting future auth flows\n            if (authenticated) {\n                try {\n                    await fetch(\"\".concat(process.env.NEXT_PUBLIC_BASE_URL, \"/api/auth/clear-return-url\"), {\n                        method: 'POST',\n                        credentials: 'same-origin'\n                    });\n                } catch (error) {\n                    console.error('[checkAuthStatus] Failed to clear return URL cookie:', error);\n                }\n            }\n            return newState;\n        } catch (error) {\n            console.error('[checkAuthStatus] error', error);\n            const newState = {\n                isAuthenticated: false,\n                user: null\n            };\n            setAuthState(newState);\n            return newState;\n        } finally{\n            setLoading(false);\n        }\n    }, []);\n    (0, react_1.useEffect)(()=>{\n        checkAuthStatus();\n        const handleVisibility = ()=>{\n            if (document.visibilityState === 'visible') {\n                checkAuthStatus();\n            }\n        };\n        document.addEventListener('visibilitychange', handleVisibility);\n        return ()=>document.removeEventListener('visibilitychange', handleVisibility);\n    }, [\n        checkAuthStatus\n    ]);\n    const signIn = async ()=>{\n        try {\n            // Check if we're inside an iframe\n            if (isInsideIframe()) {\n                setShowIframeNotification(true);\n                return;\n            }\n            // Get client ID from config\n            const clientId = process.env.NEXT_PUBLIC_CLIENT_ID;\n            if (!clientId) {\n                console.error(\"Client ID is not configured.\");\n                return;\n            }\n            // Clear any stale return URL cookies before starting new auth flow\n            try {\n                await fetch(\"\".concat(process.env.NEXT_PUBLIC_BASE_URL, \"/api/auth/clear-return-url\"), {\n                    method: 'POST',\n                    credentials: 'same-origin'\n                });\n            } catch (error) {\n                console.error('[signIn] Failed to clear return URL cookie:', error);\n            }\n            // Use the callback page as the redirect URL\n            const redirectUrl = \"\".concat(process.env.NEXT_PUBLIC_BASE_URL, \"/api/auth/callback\");\n            // Build the auth service URL with client ID and redirect URL\n            const authUrl = \"https://auth.cosmic.new/signin?client_id=\".concat(encodeURIComponent(clientId), \"&redirect_url=\").concat(encodeURIComponent(redirectUrl));\n            // Clear any existing auth state before redirecting\n            setAuthState({\n                isAuthenticated: false,\n                user: null\n            });\n            // Redirect to the auth URL\n            window.location.href = authUrl;\n        } catch (error) {\n            console.error('Error during sign-in:', error);\n        }\n    };\n    const signOut = async ()=>{\n        try {\n            setLoading(true);\n            // Step 1: Delete refresh token\n            const response = await fetch(\"\".concat(process.env.NEXT_PUBLIC_BASE_URL, \"/api/auth/signout\"), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Cache-Control': 'no-cache',\n                    'Pragma': 'no-cache'\n                },\n                credentials: 'same-origin' // Ensure cookies are sent\n            });\n            if (response.ok) {\n                const data = await response.json();\n                // Step 2: If there's a next step URL, call it to delete the access token\n                if (data.nextStep) {\n                    const step2Response = await fetch(data.nextStep, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Cache-Control': 'no-cache',\n                            'Pragma': 'no-cache'\n                        },\n                        credentials: 'same-origin'\n                    });\n                    if (!step2Response.ok) {\n                        console.error('Step 2 sign out failed:', await step2Response.text());\n                    }\n                }\n                setAuthState({\n                    isAuthenticated: false,\n                    user: null\n                });\n                window.location.href = \"/\"; // Redirect to the homepage\n            } else {\n                console.error('Sign out failed:', await response.text());\n            }\n        } catch (error) {\n            console.error('Sign out error:', error);\n        } finally{\n            setLoading(false);\n        }\n    };\n    return (0, jsx_runtime_1.jsxs)(AuthContext.Provider, {\n        value: {\n            isAuthenticated: authState.isAuthenticated,\n            user: authState.user,\n            signIn,\n            signOut,\n            checkAuthStatus,\n            loading\n        },\n        children: [\n            children,\n            showIframeNotification && (0, jsx_runtime_1.jsx)(IframeNotification, {\n                onClose: ()=>setShowIframeNotification(false)\n            })\n        ]\n    });\n}\n_c1 = AuthProvider;\nfunction useAuth() {\n    const context = (0, react_1.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n}\nvar _c, _c1;\n$RefreshReg$(_c, \"IframeNotification\");\n$RefreshReg$(_c1, \"AuthProvider\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/cosmic-authentication/dist/context/auth-context.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/navigation.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/api/navigation.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(app-pages-browser)/./node_modules/next/dist/client/components/navigation.js\");\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_components_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n//# sourceMappingURL=navigation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdEOztBQUVoRCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBa2lmIEtoYW5cXE9uZURyaXZlXFxEZXNrdG9wXFxGYXJtc2V2YS0gc2l0ZVxcbm9kZV9tb2R1bGVzXFxuZXh0XFxkaXN0XFxhcGlcXG5hdmlnYXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi4vY2xpZW50L2NvbXBvbmVudHMvbmF2aWdhdGlvbic7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5hdmlnYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/navigation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CAkif%20Khan%5C%5COneDrive%5C%5CDesktop%5C%5CFarmseva-%20site%5C%5Cnode_modules%5C%5Ccosmic-analytics%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22CosmicAnalyticsProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CAkif%20Khan%5C%5COneDrive%5C%5CDesktop%5C%5CFarmseva-%20site%5C%5Cnode_modules%5C%5Ccosmic-authentication%5C%5Cdist%5C%5Ccontext%5C%5Cauth-context.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CAkif%20Khan%5C%5COneDrive%5C%5CDesktop%5C%5CFarmseva-%20site%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Merriweather%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22weight%5C%22%3A%5B%5C%22300%5C%22%2C%5C%22400%5C%22%2C%5C%22700%5C%22%5D%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22primaryFont%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CAkif%20Khan%5C%5COneDrive%5C%5CDesktop%5C%5CFarmseva-%20site%5C%5Cnode_modules%5C%5Ccosmic-analytics%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22CosmicAnalyticsProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CAkif%20Khan%5C%5COneDrive%5C%5CDesktop%5C%5CFarmseva-%20site%5C%5Cnode_modules%5C%5Ccosmic-authentication%5C%5Cdist%5C%5Ccontext%5C%5Cauth-context.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CAkif%20Khan%5C%5COneDrive%5C%5CDesktop%5C%5CFarmseva-%20site%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Merriweather%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22weight%5C%22%3A%5B%5C%22300%5C%22%2C%5C%22400%5C%22%2C%5C%22700%5C%22%5D%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22primaryFont%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/cosmic-analytics/dist/index.mjs */ \"(app-pages-browser)/./node_modules/cosmic-analytics/dist/index.mjs\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/cosmic-authentication/dist/context/auth-context.js */ \"(app-pages-browser)/./node_modules/cosmic-authentication/dist/context/auth-context.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/font/google/target.css?{\"path\":\"app\\\\layout.tsx\",\"import\":\"Merriweather\",\"arguments\":[{\"weight\":[\"300\",\"400\",\"700\"],\"subsets\":[\"latin\"]}],\"variableName\":\"primaryFont\"} */ \"(app-pages-browser)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app\\\\\\\\layout.tsx\\\",\\\"import\\\":\\\"Merriweather\\\",\\\"arguments\\\":[{\\\"weight\\\":[\\\"300\\\",\\\"400\\\",\\\"700\\\"],\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"primaryFont\\\"}\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDQWtpZiUyMEtoYW4lNUMlNUNPbmVEcml2ZSU1QyU1Q0Rlc2t0b3AlNUMlNUNGYXJtc2V2YS0lMjBzaXRlJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDY29zbWljLWFuYWx5dGljcyU1QyU1Q2Rpc3QlNUMlNUNpbmRleC5tanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJDb3NtaWNBbmFseXRpY3NQcm92aWRlciUyMiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJDJTNBJTVDJTVDVXNlcnMlNUMlNUNBa2lmJTIwS2hhbiU1QyU1Q09uZURyaXZlJTVDJTVDRGVza3RvcCU1QyU1Q0Zhcm1zZXZhLSUyMHNpdGUlNUMlNUNub2RlX21vZHVsZXMlNUMlNUNjb3NtaWMtYXV0aGVudGljYXRpb24lNUMlNUNkaXN0JTVDJTVDY29udGV4dCU1QyU1Q2F1dGgtY29udGV4dC5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMiolMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDQWtpZiUyMEtoYW4lNUMlNUNPbmVEcml2ZSU1QyU1Q0Rlc2t0b3AlNUMlNUNGYXJtc2V2YS0lMjBzaXRlJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2ZvbnQlNUMlNUNnb29nbGUlNUMlNUN0YXJnZXQuY3NzJTNGJTdCJTVDJTIycGF0aCU1QyUyMiUzQSU1QyUyMmFwcCU1QyU1QyU1QyU1Q2xheW91dC50c3glNUMlMjIlMkMlNUMlMjJpbXBvcnQlNUMlMjIlM0ElNUMlMjJNZXJyaXdlYXRoZXIlNUMlMjIlMkMlNUMlMjJhcmd1bWVudHMlNUMlMjIlM0ElNUIlN0IlNUMlMjJ3ZWlnaHQlNUMlMjIlM0ElNUIlNUMlMjIzMDAlNUMlMjIlMkMlNUMlMjI0MDAlNUMlMjIlMkMlNUMlMjI3MDAlNUMlMjIlNUQlMkMlNUMlMjJzdWJzZXRzJTVDJTIyJTNBJTVCJTVDJTIybGF0aW4lNUMlMjIlNUQlN0QlNUQlMkMlNUMlMjJ2YXJpYWJsZU5hbWUlNUMlMjIlM0ElNUMlMjJwcmltYXJ5Rm9udCU1QyUyMiU3RCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLHNOQUEwTDtBQUMxTDtBQUNBLDRQQUFpSztBQUNqSztBQUNBLGtoQkFBdVQiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcIkNvc21pY0FuYWx5dGljc1Byb3ZpZGVyXCJdICovIFwiQzpcXFxcVXNlcnNcXFxcQWtpZiBLaGFuXFxcXE9uZURyaXZlXFxcXERlc2t0b3BcXFxcRmFybXNldmEtIHNpdGVcXFxcbm9kZV9tb2R1bGVzXFxcXGNvc21pYy1hbmFseXRpY3NcXFxcZGlzdFxcXFxpbmRleC5tanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXEFraWYgS2hhblxcXFxPbmVEcml2ZVxcXFxEZXNrdG9wXFxcXEZhcm1zZXZhLSBzaXRlXFxcXG5vZGVfbW9kdWxlc1xcXFxjb3NtaWMtYXV0aGVudGljYXRpb25cXFxcZGlzdFxcXFxjb250ZXh0XFxcXGF1dGgtY29udGV4dC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcQWtpZiBLaGFuXFxcXE9uZURyaXZlXFxcXERlc2t0b3BcXFxcRmFybXNldmEtIHNpdGVcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZm9udFxcXFxnb29nbGVcXFxcdGFyZ2V0LmNzcz97XFxcInBhdGhcXFwiOlxcXCJhcHBcXFxcXFxcXGxheW91dC50c3hcXFwiLFxcXCJpbXBvcnRcXFwiOlxcXCJNZXJyaXdlYXRoZXJcXFwiLFxcXCJhcmd1bWVudHNcXFwiOlt7XFxcIndlaWdodFxcXCI6W1xcXCIzMDBcXFwiLFxcXCI0MDBcXFwiLFxcXCI3MDBcXFwiXSxcXFwic3Vic2V0c1xcXCI6W1xcXCJsYXRpblxcXCJdfV0sXFxcInZhcmlhYmxlTmFtZVxcXCI6XFxcInByaW1hcnlGb250XFxcIn1cIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CAkif%20Khan%5C%5COneDrive%5C%5CDesktop%5C%5CFarmseva-%20site%5C%5Cnode_modules%5C%5Ccosmic-analytics%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22CosmicAnalyticsProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CAkif%20Khan%5C%5COneDrive%5C%5CDesktop%5C%5CFarmseva-%20site%5C%5Cnode_modules%5C%5Ccosmic-authentication%5C%5Cdist%5C%5Ccontext%5C%5Cauth-context.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CAkif%20Khan%5C%5COneDrive%5C%5CDesktop%5C%5CFarmseva-%20site%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Merriweather%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22weight%5C%22%3A%5B%5C%22300%5C%22%2C%5C%22400%5C%22%2C%5C%22700%5C%22%5D%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22primaryFont%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(()=>{\"use strict\";var e={432:(e,r,t)=>{var n=t(887);var i=Object.create(null);var a=typeof document===\"undefined\";var o=Array.prototype.forEach;function debounce(e,r){var t=0;return function(){var n=this;var i=arguments;var a=function functionCall(){return e.apply(n,i)};clearTimeout(t);t=setTimeout(a,r)}}function noop(){}function getCurrentScriptUrl(e){var r=i[e];if(!r){if(document.currentScript){r=document.currentScript.src}else{var t=document.getElementsByTagName(\"script\");var a=t[t.length-1];if(a){r=a.src}}i[e]=r}return function(e){if(!r){return null}var t=r.split(/([^\\\\/]+)\\.js$/);var i=t&&t[1];if(!i){return[r.replace(\".js\",\".css\")]}if(!e){return[r.replace(\".js\",\".css\")]}return e.split(\",\").map((function(e){var t=new RegExp(\"\".concat(i,\"\\\\.js$\"),\"g\");return n(r.replace(t,\"\".concat(e.replace(/{fileName}/g,i),\".css\")))}))}}function updateCss(e,r){if(!r){if(!e.href){return}r=e.href.split(\"?\")[0]}if(!isUrlRequest(r)){return}if(e.isLoaded===false){return}if(!r||!(r.indexOf(\".css\")>-1)){return}e.visited=true;var t=e.cloneNode();t.isLoaded=false;t.addEventListener(\"load\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.addEventListener(\"error\",(function(){if(t.isLoaded){return}t.isLoaded=true;e.parentNode.removeChild(e)}));t.href=\"\".concat(r,\"?\").concat(Date.now());if(e.nextSibling){e.parentNode.insertBefore(t,e.nextSibling)}else{e.parentNode.appendChild(t)}}function getReloadUrl(e,r){var t;e=n(e,{stripWWW:false});r.some((function(n){if(e.indexOf(r)>-1){t=n}}));return t}function reloadStyle(e){if(!e){return false}var r=document.querySelectorAll(\"link\");var t=false;o.call(r,(function(r){if(!r.href){return}var n=getReloadUrl(r.href,e);if(!isUrlRequest(n)){return}if(r.visited===true){return}if(n){updateCss(r,n);t=true}}));return t}function reloadAll(){var e=document.querySelectorAll(\"link\");o.call(e,(function(e){if(e.visited===true){return}updateCss(e)}))}function isUrlRequest(e){if(!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(e)){return false}return true}e.exports=function(e,r){if(a){console.log(\"no window.document found, will not HMR CSS\");return noop}var t=getCurrentScriptUrl(e);function update(){var e=t(r.filename);var n=reloadStyle(e);if(r.locals){console.log(\"[HMR] Detected local css modules. Reload all css\");reloadAll();return}if(n){console.log(\"[HMR] css reload %s\",e.join(\" \"))}else{console.log(\"[HMR] Reload all css\");reloadAll()}}return debounce(update,50)}},887:e=>{function normalizeUrl(e){return e.reduce((function(e,r){switch(r){case\"..\":e.pop();break;case\".\":break;default:e.push(r)}return e}),[]).join(\"/\")}e.exports=function(e){e=e.trim();if(/^data:/i.test(e)){return e}var r=e.indexOf(\"//\")!==-1?e.split(\"//\")[0]+\"//\":\"\";var t=e.replace(new RegExp(r,\"i\"),\"\").split(\"/\");var n=t[0].toLowerCase().replace(/\\.$/,\"\");t[0]=\"\";var i=normalizeUrl(t);return r+n+i}}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var i=r[t]={exports:{}};var a=true;try{e[t](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(432);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vaG1yL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLGFBQWEsT0FBTyxjQUFjLGFBQWEsMEJBQTBCLG9DQUFvQyw4QkFBOEIsdUJBQXVCLFFBQVEsa0JBQWtCLFdBQVcsZ0JBQWdCLDhCQUE4QixxQkFBcUIsZ0JBQWdCLG1CQUFtQixpQkFBaUIsZ0NBQWdDLFdBQVcsT0FBTywyQkFBMkIsNkJBQTZCLEtBQUssOENBQThDLG9CQUFvQixNQUFNLFNBQVMsT0FBTyxtQkFBbUIsT0FBTyxZQUFZLGdDQUFnQyxjQUFjLE9BQU8sZ0NBQWdDLE9BQU8sZ0NBQWdDLHFDQUFxQyw0Q0FBNEMsMkNBQTJDLFNBQVMsZ0JBQWdCLElBQUksd0JBQXdCLE9BQU8sWUFBWSxPQUFPLHVCQUF1QixxQkFBcUIsT0FBTyx1QkFBdUIsT0FBTyxnQ0FBZ0MsT0FBTyxlQUFlLG9CQUFvQixpQkFBaUIsc0NBQXNDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsdUNBQXVDLGVBQWUsT0FBTyxnQkFBZ0IsNEJBQTRCLEdBQUcsMkNBQTJDLGtCQUFrQiwyQ0FBMkMsS0FBSyw2QkFBNkIsMkJBQTJCLE1BQU0sT0FBTyxlQUFlLEVBQUUsb0JBQW9CLG9CQUFvQixLQUFLLEdBQUcsU0FBUyx3QkFBd0IsT0FBTyxhQUFhLHdDQUF3QyxZQUFZLHNCQUFzQixZQUFZLE9BQU8sNkJBQTZCLHFCQUFxQixPQUFPLHFCQUFxQixPQUFPLE1BQU0sZUFBZSxRQUFRLEdBQUcsU0FBUyxxQkFBcUIsd0NBQXdDLHNCQUFzQixxQkFBcUIsT0FBTyxhQUFhLEdBQUcseUJBQXlCLHlDQUF5QyxhQUFhLFlBQVksd0JBQXdCLE1BQU0sMERBQTBELFlBQVksNkJBQTZCLGtCQUFrQixvQkFBb0IscUJBQXFCLGFBQWEsZ0VBQWdFLFlBQVksT0FBTyxNQUFNLCtDQUErQyxLQUFLLG9DQUFvQyxhQUFhLDRCQUE0QixTQUFTLHlCQUF5QiwrQkFBK0IsVUFBVSxpQkFBaUIsTUFBTSxjQUFjLGtCQUFrQixTQUFTLGdCQUFnQixzQkFBc0IsV0FBVyxzQkFBc0IsU0FBUyxvREFBb0QsaURBQWlELDJDQUEyQyxRQUFRLHNCQUFzQixnQkFBZ0IsU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBa2lmIEtoYW5cXE9uZURyaXZlXFxEZXNrdG9wXFxGYXJtc2V2YS0gc2l0ZVxcbm9kZV9tb2R1bGVzXFxuZXh0XFxkaXN0XFxjb21waWxlZFxcbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cXGhtclxcaG90TW9kdWxlUmVwbGFjZW1lbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiKCgpPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9ezQzMjooZSxyLHQpPT57dmFyIG49dCg4ODcpO3ZhciBpPU9iamVjdC5jcmVhdGUobnVsbCk7dmFyIGE9dHlwZW9mIGRvY3VtZW50PT09XCJ1bmRlZmluZWRcIjt2YXIgbz1BcnJheS5wcm90b3R5cGUuZm9yRWFjaDtmdW5jdGlvbiBkZWJvdW5jZShlLHIpe3ZhciB0PTA7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG49dGhpczt2YXIgaT1hcmd1bWVudHM7dmFyIGE9ZnVuY3Rpb24gZnVuY3Rpb25DYWxsKCl7cmV0dXJuIGUuYXBwbHkobixpKX07Y2xlYXJUaW1lb3V0KHQpO3Q9c2V0VGltZW91dChhLHIpfX1mdW5jdGlvbiBub29wKCl7fWZ1bmN0aW9uIGdldEN1cnJlbnRTY3JpcHRVcmwoZSl7dmFyIHI9aVtlXTtpZighcil7aWYoZG9jdW1lbnQuY3VycmVudFNjcmlwdCl7cj1kb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY31lbHNle3ZhciB0PWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO3ZhciBhPXRbdC5sZW5ndGgtMV07aWYoYSl7cj1hLnNyY319aVtlXT1yfXJldHVybiBmdW5jdGlvbihlKXtpZighcil7cmV0dXJuIG51bGx9dmFyIHQ9ci5zcGxpdCgvKFteXFxcXC9dKylcXC5qcyQvKTt2YXIgaT10JiZ0WzFdO2lmKCFpKXtyZXR1cm5bci5yZXBsYWNlKFwiLmpzXCIsXCIuY3NzXCIpXX1pZighZSl7cmV0dXJuW3IucmVwbGFjZShcIi5qc1wiLFwiLmNzc1wiKV19cmV0dXJuIGUuc3BsaXQoXCIsXCIpLm1hcCgoZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IFJlZ0V4cChcIlwiLmNvbmNhdChpLFwiXFxcXC5qcyRcIiksXCJnXCIpO3JldHVybiBuKHIucmVwbGFjZSh0LFwiXCIuY29uY2F0KGUucmVwbGFjZSgve2ZpbGVOYW1lfS9nLGkpLFwiLmNzc1wiKSkpfSkpfX1mdW5jdGlvbiB1cGRhdGVDc3MoZSxyKXtpZighcil7aWYoIWUuaHJlZil7cmV0dXJufXI9ZS5ocmVmLnNwbGl0KFwiP1wiKVswXX1pZighaXNVcmxSZXF1ZXN0KHIpKXtyZXR1cm59aWYoZS5pc0xvYWRlZD09PWZhbHNlKXtyZXR1cm59aWYoIXJ8fCEoci5pbmRleE9mKFwiLmNzc1wiKT4tMSkpe3JldHVybn1lLnZpc2l0ZWQ9dHJ1ZTt2YXIgdD1lLmNsb25lTm9kZSgpO3QuaXNMb2FkZWQ9ZmFsc2U7dC5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLChmdW5jdGlvbigpe2lmKHQuaXNMb2FkZWQpe3JldHVybn10LmlzTG9hZGVkPXRydWU7ZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGUpfSkpO3QuYWRkRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsKGZ1bmN0aW9uKCl7aWYodC5pc0xvYWRlZCl7cmV0dXJufXQuaXNMb2FkZWQ9dHJ1ZTtlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZSl9KSk7dC5ocmVmPVwiXCIuY29uY2F0KHIsXCI/XCIpLmNvbmNhdChEYXRlLm5vdygpKTtpZihlLm5leHRTaWJsaW5nKXtlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHQsZS5uZXh0U2libGluZyl9ZWxzZXtlLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQodCl9fWZ1bmN0aW9uIGdldFJlbG9hZFVybChlLHIpe3ZhciB0O2U9bihlLHtzdHJpcFdXVzpmYWxzZX0pO3Iuc29tZSgoZnVuY3Rpb24obil7aWYoZS5pbmRleE9mKHIpPi0xKXt0PW59fSkpO3JldHVybiB0fWZ1bmN0aW9uIHJlbG9hZFN0eWxlKGUpe2lmKCFlKXtyZXR1cm4gZmFsc2V9dmFyIHI9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcImxpbmtcIik7dmFyIHQ9ZmFsc2U7by5jYWxsKHIsKGZ1bmN0aW9uKHIpe2lmKCFyLmhyZWYpe3JldHVybn12YXIgbj1nZXRSZWxvYWRVcmwoci5ocmVmLGUpO2lmKCFpc1VybFJlcXVlc3Qobikpe3JldHVybn1pZihyLnZpc2l0ZWQ9PT10cnVlKXtyZXR1cm59aWYobil7dXBkYXRlQ3NzKHIsbik7dD10cnVlfX0pKTtyZXR1cm4gdH1mdW5jdGlvbiByZWxvYWRBbGwoKXt2YXIgZT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwibGlua1wiKTtvLmNhbGwoZSwoZnVuY3Rpb24oZSl7aWYoZS52aXNpdGVkPT09dHJ1ZSl7cmV0dXJufXVwZGF0ZUNzcyhlKX0pKX1mdW5jdGlvbiBpc1VybFJlcXVlc3QoZSl7aWYoIS9eW2EtekEtWl1bYS16QS1aXFxkK1xcLS5dKjovLnRlc3QoZSkpe3JldHVybiBmYWxzZX1yZXR1cm4gdHJ1ZX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSxyKXtpZihhKXtjb25zb2xlLmxvZyhcIm5vIHdpbmRvdy5kb2N1bWVudCBmb3VuZCwgd2lsbCBub3QgSE1SIENTU1wiKTtyZXR1cm4gbm9vcH12YXIgdD1nZXRDdXJyZW50U2NyaXB0VXJsKGUpO2Z1bmN0aW9uIHVwZGF0ZSgpe3ZhciBlPXQoci5maWxlbmFtZSk7dmFyIG49cmVsb2FkU3R5bGUoZSk7aWYoci5sb2NhbHMpe2NvbnNvbGUubG9nKFwiW0hNUl0gRGV0ZWN0ZWQgbG9jYWwgY3NzIG1vZHVsZXMuIFJlbG9hZCBhbGwgY3NzXCIpO3JlbG9hZEFsbCgpO3JldHVybn1pZihuKXtjb25zb2xlLmxvZyhcIltITVJdIGNzcyByZWxvYWQgJXNcIixlLmpvaW4oXCIgXCIpKX1lbHNle2NvbnNvbGUubG9nKFwiW0hNUl0gUmVsb2FkIGFsbCBjc3NcIik7cmVsb2FkQWxsKCl9fXJldHVybiBkZWJvdW5jZSh1cGRhdGUsNTApfX0sODg3OmU9PntmdW5jdGlvbiBub3JtYWxpemVVcmwoZSl7cmV0dXJuIGUucmVkdWNlKChmdW5jdGlvbihlLHIpe3N3aXRjaChyKXtjYXNlXCIuLlwiOmUucG9wKCk7YnJlYWs7Y2FzZVwiLlwiOmJyZWFrO2RlZmF1bHQ6ZS5wdXNoKHIpfXJldHVybiBlfSksW10pLmpvaW4oXCIvXCIpfWUuZXhwb3J0cz1mdW5jdGlvbihlKXtlPWUudHJpbSgpO2lmKC9eZGF0YTovaS50ZXN0KGUpKXtyZXR1cm4gZX12YXIgcj1lLmluZGV4T2YoXCIvL1wiKSE9PS0xP2Uuc3BsaXQoXCIvL1wiKVswXStcIi8vXCI6XCJcIjt2YXIgdD1lLnJlcGxhY2UobmV3IFJlZ0V4cChyLFwiaVwiKSxcIlwiKS5zcGxpdChcIi9cIik7dmFyIG49dFswXS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1xcLiQvLFwiXCIpO3RbMF09XCJcIjt2YXIgaT1ub3JtYWxpemVVcmwodCk7cmV0dXJuIHIrbitpfX19O3ZhciByPXt9O2Z1bmN0aW9uIF9fbmNjd3Bja19yZXF1aXJlX18odCl7dmFyIG49clt0XTtpZihuIT09dW5kZWZpbmVkKXtyZXR1cm4gbi5leHBvcnRzfXZhciBpPXJbdF09e2V4cG9ydHM6e319O3ZhciBhPXRydWU7dHJ5e2VbdF0oaSxpLmV4cG9ydHMsX19uY2N3cGNrX3JlcXVpcmVfXyk7YT1mYWxzZX1maW5hbGx5e2lmKGEpZGVsZXRlIHJbdF19cmV0dXJuIGkuZXhwb3J0c31pZih0eXBlb2YgX19uY2N3cGNrX3JlcXVpcmVfXyE9PVwidW5kZWZpbmVkXCIpX19uY2N3cGNrX3JlcXVpcmVfXy5hYj1fX2Rpcm5hbWUrXCIvXCI7dmFyIHQ9X19uY2N3cGNrX3JlcXVpcmVfXyg0MzIpO21vZHVsZS5leHBvcnRzPXR9KSgpOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\layout.tsx\",\"import\":\"Merriweather\",\"arguments\":[{\"weight\":[\"300\",\"400\",\"700\"],\"subsets\":[\"latin\"]}],\"variableName\":\"primaryFont\"}":
/*!***************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/font/google/target.css?{"path":"app\\layout.tsx","import":"Merriweather","arguments":[{"weight":["300","400","700"],"subsets":["latin"]}],"variableName":"primaryFont"} ***!
  \***************************************************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'Merriweather', 'Merriweather Fallback'\",\"fontStyle\":\"normal\"},\"className\":\"__className_1836d9\"};\n    if(true) {\n      // 1758692695891\n      var cssReload = __webpack_require__(/*! ./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"/_next/\",\"esModule\":false,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvZ29vZ2xlL3RhcmdldC5jc3M/e1wicGF0aFwiOlwiYXBwXFxcXGxheW91dC50c3hcIixcImltcG9ydFwiOlwiTWVycml3ZWF0aGVyXCIsXCJhcmd1bWVudHNcIjpbe1wid2VpZ2h0XCI6W1wiMzAwXCIsXCI0MDBcIixcIjcwMFwiXSxcInN1YnNldHNcIjpbXCJsYXRpblwiXX1dLFwidmFyaWFibGVOYW1lXCI6XCJwcmltYXJ5Rm9udFwifSIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGtCQUFrQixTQUFTLDRFQUE0RTtBQUN2RyxPQUFPLElBQVU7QUFDakI7QUFDQSxzQkFBc0IsbUJBQU8sQ0FBQyx3TUFBd0ksY0FBYyxzREFBc0Q7QUFDMU8sTUFBTSxVQUFVO0FBQ2hCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBa2lmIEtoYW5cXE9uZURyaXZlXFxEZXNrdG9wXFxGYXJtc2V2YS0gc2l0ZVxcbm9kZV9tb2R1bGVzXFxuZXh0XFxmb250XFxnb29nbGVcXHRhcmdldC5jc3M/e1wicGF0aFwiOlwiYXBwXFxsYXlvdXQudHN4XCIsXCJpbXBvcnRcIjpcIk1lcnJpd2VhdGhlclwiLFwiYXJndW1lbnRzXCI6W3tcIndlaWdodFwiOltcIjMwMFwiLFwiNDAwXCIsXCI3MDBcIl0sXCJzdWJzZXRzXCI6W1wibGF0aW5cIl19XSxcInZhcmlhYmxlTmFtZVwiOlwicHJpbWFyeUZvbnRcIn18YXBwLXBhZ2VzLWJyb3dzZXIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5tb2R1bGUuZXhwb3J0cyA9IHtcInN0eWxlXCI6e1wiZm9udEZhbWlseVwiOlwiJ01lcnJpd2VhdGhlcicsICdNZXJyaXdlYXRoZXIgRmFsbGJhY2snXCIsXCJmb250U3R5bGVcIjpcIm5vcm1hbFwifSxcImNsYXNzTmFtZVwiOlwiX19jbGFzc05hbWVfMTgzNmQ5XCJ9O1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE3NTg2OTI2OTU4OTFcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiQzovVXNlcnMvQWtpZiBLaGFuL09uZURyaXZlL0Rlc2t0b3AvRmFybXNldmEtIHNpdGUvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJwdWJsaWNQYXRoXCI6XCIvX25leHQvXCIsXCJlc01vZHVsZVwiOmZhbHNlLFwibG9jYWxzXCI6dHJ1ZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/font/google/target.css?{\"path\":\"app\\\\layout.tsx\",\"import\":\"Merriweather\",\"arguments\":[{\"weight\":[\"300\",\"400\",\"700\"],\"subsets\":[\"latin\"]}],\"variableName\":\"primaryFont\"}\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main-app"], () => (__webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CAkif%20Khan%5C%5COneDrive%5C%5CDesktop%5C%5CFarmseva-%20site%5C%5Cnode_modules%5C%5Ccosmic-analytics%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22CosmicAnalyticsProvider%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CAkif%20Khan%5C%5COneDrive%5C%5CDesktop%5C%5CFarmseva-%20site%5C%5Cnode_modules%5C%5Ccosmic-authentication%5C%5Cdist%5C%5Ccontext%5C%5Cauth-context.js%22%2C%22ids%22%3A%5B%22*%22%5D%7D&modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CAkif%20Khan%5C%5COneDrive%5C%5CDesktop%5C%5CFarmseva-%20site%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%5C%5C%5C%5Clayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Merriweather%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22weight%5C%22%3A%5B%5C%22300%5C%22%2C%5C%22400%5C%22%2C%5C%22700%5C%22%5D%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22primaryFont%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);